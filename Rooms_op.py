
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
from PIL import Image, ImageTk
import PIL.Image
from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Toplevel, messagebox
import staff_homepage
import staff_login_page
import sql_test


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./Rooms_assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

class RoomsOp:
    def __init__(self, window):
        self.window = window
        self.window.title("Staff manager homepage")
        self.window.resizable(False, False)
        self.window.geometry("1440x810")
        self.window.state('zoomed')
        self.window.configure(bg = "#FFFFFF")


        frame=Frame(self.window,
            bg = "#FFFFFF",
            height = 700,
            width = 1440,
            bd =0,
            highlightthickness = 0,
            relief = "ridge")
        frame.place(x=0,y=0)


        canvas = Canvas(
            self.window,
            bg = "#FFFFFF",
            height = 1,
            width = 1440,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)

        image_image_1 = PIL.Image.open("Rooms_assets\image_1.png")
        image_resized= image_image_1.resize((900,500))
        photo = ImageTk.PhotoImage(image_resized)
        
        image_label=Label(frame,
            bg = "#FFFFFF",
            height = 500,
            width = 950,
            bd = 0,
            image= photo,
            highlightthickness = 0,
            relief = "ridge")
        image_label.image=photo
        image_label.place(x=230,y=10)

        # image_image_1 = PhotoImage(
        #     file=relative_to_assets("image_1.png"))
        # image_1 = canvas.create_image(
        #     690.0,
        #     301.0,
        #     image=image_image_1
        # )

        self.entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        self.entry_bg_1 = canvas.create_image(
            352.0,
            595.0,
            image=self.entry_image_1
        )
        self.entry_1 = Entry(
            self.window,
            bd=0,
            bg="#E8F2F9",
            highlightthickness=0
        )
        self.entry_1.place(
            x=203.0,
            y=570.0,
            width=298.0,
            height=48.0
        )

        canvas.create_text(
            22.0,
            538.0,
            anchor="nw",
            text="Room ID",
            fill="#243863",
            font=("Inter SemiBold", 20 * -1)
        )

        button_image_1 = PhotoImage(
            file=relative_to_assets("add_room1.png"))
        button_1 = Button(
            self.window,
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.add_room(),
            relief="flat"
        )
        button_1.image = button_image_1
        button_1.place(
            x=195.0,
            y=642.0,
            width=315.0,
            height=50.0
        )

        button_image_2 = PhotoImage(
            file=relative_to_assets("show_all_room2.png"))
        button_2 = Button(
            self.window,
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.show_all_rooms(),
            relief="flat"
        )
        button_2.image = button_image_2
        button_2.place(
            x=847.0,
            y=598.0,
            width=315.0,
            height=50.0
        )

        button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        button_3 = Button(
            self.window,
            image=button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.back(),
            relief="flat"
        )
        button_3.image = button_image_3
        button_3.place(
            x=48.0,
            y=744.0,
            width=120.0,
            height=35.0
        )

        button_image_4 = PhotoImage(
            file=relative_to_assets("button_4.png"))
        button_4 = Button(
            self.window,
            image=button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.logout(),
            relief="flat"
        )
        button_4.image = button_image_4
        button_4.place(
            x=1244.0,
            y=60.0,
            width=74.02703857421875,
            height=25.0
        )

        canvas.create_rectangle(
            701.0,
            483.0,
            701.0,
            741.0697631835938,
            fill="#000000",
            outline="")


    def back(self):
        win=Toplevel()
        staff_homepage.StaffHomePage(win)
        self.window.withdraw()
        win.deiconify

    def logout(self):
        win = Toplevel()
        staff_login_page.StaffLoginPage(win)
        self.window.withdraw()
        win.deiconify

    def add_room(self):
        room_entry = self.entry_1.get()


        select_query="select * from room where room_id==? "
        sql_test.sqlBase.cursor.execute(select_query,(room_entry))
        querey_result = sql_test.sqlBase.cursor.fetchone()

        if(querey_result):

            messagebox.showwarning("Error","Room already exist!")

        else:
            add_inputs = """insert or into room(room_id) values(?)"""
            sql_test.sqlBase.cursor.execute(add_inputs, (room_entry))
            self.entry_1.delete(0,END)

        sql_test.sqlBase.conn.commit()

        




def Rooms_op():
    window = Tk()
    RoomsOp(window)
    window.mainloop()


if __name__ == '__main__':
    Rooms_op()
