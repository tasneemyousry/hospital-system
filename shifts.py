
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
from tkinter import *
from PIL import Image, ImageTk
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Toplevel, messagebox
import staff_homepage
import staff_login_page
import sql_test

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("./Shifts_assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)




class Shifts:
    def __init__(self,window):

        self.window = window
        self.window.geometry("1440x810")
        self.window.configure(bg = "#FFFFFF")
        self.window.resizable(False, False)
        self.window.geometry("1440x900")
        self.window.state('zoomed')
        self.window.title("Calender & shifts")

        frame = Frame(
            self.window,
            bg = "#FFFFFF",
            height = 700,
            width = 1440,
            bd =0,
            highlightthickness = 0,
            relief = "ridge")
        frame.place(x=0,y=0)



        canvas = Canvas(
            self.window,
            bg = "#FFFFFF",
            height = 810,
            width = 1440,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)

        image_image_1 = Image.open("Shifts_assets\image_1.png")
        image_resized = image_image_1.resize((1200,500))
        photo = ImageTk.PhotoImage(image_resized)
        image_label = Label(frame,
                            bg="#FFFFFF",
                            height=500,
                            width=1200,
                            bd=0,
                            image=photo,
                            highlightthickness=0,
                            relief="ridge")
        image_label.image=photo
        image_label.place(x=30,y=10)
        
        # image_image_1 = PhotoImage(
        #     file=relative_to_assets("image_1.png"))
        # image_1 = canvas.create_image(
        #     720.0,
        #     315.0,
        #     image=image_image_1
        # )

        self.entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        self.entry_bg_1 = canvas.create_image(
            1194.0,
            583.5,
            image=self.entry_image_1
        )
        self.entry_1 = Entry(
            self.window,
            bd=0,
            bg="#DFEDFA",
            highlightthickness=0
        )
        self.entry_1.place(
            x=1027.0,
            y=556.0,
            width=334.0,
            height=53.0
        )

        self.entry_image_2 = PhotoImage(
            file=relative_to_assets("entry_2.png"))
        self.entry_bg_2 = canvas.create_image(
            282.0,
            583.5,
            image=self.entry_image_2
        )
        self.entry_2 = Entry(
            self.window,
            bd=0,
            bg="#DFEDFA",
            highlightthickness=0
        )
        self.entry_2.place(
            x=115.0,
            y=556.0,
            width=334.0,
            height=53.0
        )

        self.entry_image_3 = PhotoImage(
            file=relative_to_assets("entry_3.png"))
        self.entry_bg_3 = canvas.create_image(
            738.0,
            583.5,
            image=self.entry_image_3
        )
        self.entry_3 = Entry(
            self.window,
            bd=0,
            bg="#DFEDFA",
            highlightthickness=0
        )
        self.entry_3.place(
            x=571.0,
            y=556.0,
            width=334.0,
            height=53.0
        )

        canvas.create_text(
            126.0,
            525.0,
            anchor="nw",
            text="Staff ID",
            fill="#000000",
            font=("Inter SemiBold", 20 * -1)
        )

        canvas.create_text(
            571.0,
            530.0,
            anchor="nw",
            text="Start time",
            fill="#000000",
            font=("Inter SemiBold", 20 * -1)
        )

        canvas.create_text(
            1038.0,
            530.0,
            anchor="nw",
            text="End time",
            fill="#000000",
            font=("Inter SemiBold", 20 * -1)
        )

        button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            self.window,
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.add_shift(),
            relief="flat"
        )
        button_1.image=button_image_1
        button_1.place(
            x=563.0,
            y=681.0,
            width=350.0,
            height=50.0
        )

        button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        button_2 = Button(
            self.window,
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.back(),
            relief="flat"
        )
        button_2.image=button_image_2
        button_2.place(
            x=107.0,
            y=731.0,
            width=120.0,
            height=35.0
        )

        button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        button_3 = Button(
            self.window,
            image=button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda:self.logout(),
            relief="flat"
        )
        button_3.image= button_image_3
        button_3.place(
            x=1288.0,
            y=49.0,
            width=61.0,
            height=24.0
        )


    def back(self):
        win=Toplevel()
        staff_homepage.StaffHomePage(win)
        self.window.withdraw()
        win.deiconify

    def logout(self):
        win = Toplevel()
        staff_login_page.StaffLoginPage(win)
        self.window.withdraw()
        win.deiconify

    

    def add_shift(self):
        id_entry = self.entry_1.get()
        start_entry = self.entry_3.get()
        end_entry = self.entry_2.get()

        select_query="select * from staff where staff_id==? "
        sql_test.sqlBase.cursor.execute(select_query,[id_entry])
        querey_result = sql_test.sqlBase.cursor.fetchone()

        if(querey_result):
            messagebox.showwarning("Error","Staff id exists!")

            

        else:
            add_inputs = """insert into shift(staff_id, start_time, end_time) values(?,?,?)"""
            sql_test.sqlBase.cursor.execute(add_inputs, (id_entry, start_entry, end_entry))

            self.entry_1.delete(0, END)
            self.entry_2.delete(0, END)
            self.entry_3.delete(0, END)

            sql_test.sqlBase.conn.commit()
            

    

        


def shifts():
    window = Tk()
    Shifts(window)
    window.mainloop()

if __name__ == '__main__':
    shifts()

